{"version":3,"file":"static/js/754.cec952ca.chunk.js","mappings":"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","sources":["views/sales_order/index.js","zustand/ApiRequest.js","zustand/store.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport useStore from '../../zustand/store'\nimport { useParams } from 'react-router-dom'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker'\nimport dayjs from 'dayjs'\n\nconst SalesOrderPages = () => {\n  const { marketplace } = useParams()\n\n  const {\n    fetchOrder,\n    orderList,\n    sumPrice,\n    sumTotalPrice,\n    sumHpp,\n    sumMargin,\n    sumAdmin,\n    sumOngkir,\n    sumCleanMargin,\n  } = useStore((state) => state)\n\n  const formatter = new Intl.NumberFormat('pt-BR')\n\n  // Get the current date\n  const currentDate = new Date()\n  const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1)\n\n  // Format the date in yyyy/mm/dd format\n  const formattedDate = currentDate\n    .toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n    })\n    .replace(/\\//g, '/')\n  const [firstDate, setValueFirstDate] = useState(dayjs(firstDay))\n  const [endDate, setValueEndDate] = useState(dayjs(formattedDate))\n\n  useEffect(() => {\n    fetchOrder(marketplace, firstDate, endDate)\n  }, [fetchOrder, marketplace, firstDate, endDate])\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Sales Order</strong>\n          </CCardHeader>\n          <CCardBody>\n            <div className=\"row align-items-end\">\n              <div className=\"col-3\">\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={['DatePicker', 'DatePicker']}>\n                    <DatePicker\n                      label=\"Tanggal Awal\"\n                      value={firstDate}\n                      onChange={(newValue) => setValueFirstDate(newValue)}\n                    />\n                  </DemoContainer>\n                </LocalizationProvider>\n              </div>\n              <div className=\"col-3\">\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={['DatePicker', 'DatePicker']}>\n                    <DatePicker\n                      label=\"Tanggal Akhir\"\n                      value={endDate}\n                      onChange={(newValue) => setValueEndDate(newValue)}\n                    />\n                  </DemoContainer>\n                </LocalizationProvider>\n              </div>\n            </div>\n            <table className=\"table mtop30\">\n              <thead>\n                <tr>\n                  <th scope=\"col\"></th>\n                  <th scope=\"col\"></th>\n                  <th scope=\"col\"></th>\n                  <th scope=\"col\"></th>\n                  <th scope=\"col\">{formatter.format(sumPrice)}</th>\n                  <th scope=\"col\">{formatter.format(sumTotalPrice)}</th>\n                  <th scope=\"col\">{formatter.format(sumHpp)}</th>\n                  <th scope=\"col\">{formatter.format(sumMargin)}</th>\n                  <th scope=\"col\">{formatter.format(sumAdmin)}</th>\n                  <th scope=\"col\">{formatter.format(sumOngkir)}</th>\n                  <th scope=\"col\">{formatter.format(sumCleanMargin)}</th>\n                </tr>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">InvoiceNo</th>\n                  <th scope=\"col\">Nama Barang</th>\n                  <th scope=\"col\">Qty</th>\n                  <th scope=\"col\">Sales Price</th>\n                  <th scope=\"col\">Total Price</th>\n                  <th scope=\"col\">Hpp</th>\n                  <th scope=\"col\">Gross</th>\n                  <th scope=\"col\">Admin</th>\n                  <th scope=\"col\">Ongkir</th>\n                  <th scope=\"col\">Clean Margin</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orderList.map((items, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{items.invoice_no}</td>\n                    <td>\n                      <b>{items.product_name}</b>\n                    </td>\n                    <td>\n                      <b>{items.qty}</b>\n                    </td>\n                    <td>{formatter.format(items.sales_price)}</td>\n                    <td>{formatter.format(items.total_price)}</td>\n                    <td>{formatter.format(items.hpp)}</td>\n                    <td>{formatter.format(items.gross_margin)}</td>\n                    <td>{formatter.format(items.power_merchant_fee)}</td>\n                    <td>{formatter.format(items.ongkir_fee)}</td>\n                    <td>{formatter.format(Math.round(items.clean_margin))}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default SalesOrderPages\n","export function ApiRequest({\n  url,\n  method,\n  marketplace_id,\n  start_date,\n  end_date,\n  formData,\n  soNumber,\n  status,\n}) {\n  return fetch(url, {\n    method: method,\n    headers: {\n      marketplace_id: marketplace_id,\n      start_date: start_date,\n      end_date: end_date,\n      invoice_no: soNumber,\n      status: status,\n    },\n    body: formData,\n  })\n    .then((res) => res)\n    .then(\n      (result) => {\n        return result.json()\n      },\n      (error) => {\n        console.log(error)\n        return ''\n      },\n    )\n}\n\nexport default ApiRequest\n","import { create } from 'zustand'\nimport ApiRequest from '../zustand/ApiRequest'\nimport dayjs from 'dayjs'\n\nconst useStore = create((set) => ({\n  sisaPersediaan: 0,\n  sumPrice: 0,\n  sumTotalPrice: 0,\n  sumHpp: 0,\n  sumMargin: 0,\n  sumAdmin: 0,\n  sumOngkir: 0,\n  sumCleanMargin: 0,\n  productList: [],\n  orderList: [],\n  startDate: '',\n  endDate: '',\n  message: '',\n  setStartDate: async (start_date) => {\n    console.log(start_date)\n    set({\n      startDate: start_date,\n    })\n  },\n  setEndDate: async (end_date) => {\n    set({\n      endDate: end_date,\n    })\n  },\n  fetchProduct: async () => {\n    const url = process.env.REACT_APP_API_BASE_URL + 'product'\n\n    const response = await ApiRequest({\n      url: url,\n      method: 'GET',\n    })\n    const json = await response\n\n    set({\n      sisaPersediaan: json.data.sisa_persediaan,\n      productList: json.data.SbsProductList,\n    })\n  },\n  fetchOrder: async (marketplace, start_date, end_date) => {\n    const start_date_object = new Date(start_date.$d)\n    const start_date_parsed = dayjs(start_date_object).format('YYYY-MM-DD')\n    const end_date_object = new Date(end_date.$d)\n    const end_date_parsed = dayjs(end_date_object).format('YYYY-MM-DD')\n    const url = process.env.REACT_APP_API_BASE_URL + 'so'\n\n    const response = await ApiRequest({\n      url: url,\n      method: 'GET',\n      marketplace_id: marketplace === 'tokopedia' ? 'Tokopedia' : 'Shopee',\n      start_date: start_date_parsed,\n      end_date: end_date_parsed,\n    })\n    const json = await response\n\n    set({\n      sumPrice: json.data.sum_price,\n      sumTotalPrice: json.data.sum_total_price,\n      sumHpp: json.data.sum_hpp,\n      sumMargin: json.data.sum_margin,\n      sumAdmin: json.data.sum_admin,\n      sumOngkir: json.data.sum_ongkir,\n      sumCleanMargin: json.data.sum_clean_margin,\n      orderList: json.data.SbsOrderList,\n    })\n  },\n  uploadSalesOrder: async (file) => {\n    const url = process.env.REACT_APP_API_BASE_URL + 'so'\n    const formData = new FormData()\n    formData.append('file', file)\n\n    const response = await ApiRequest({\n      url: url,\n      method: 'POST',\n      formData: formData,\n    })\n    const json = await response\n\n    set({\n      message: json.responseMessage,\n    })\n  },\n  uploadPurchaseOrder: async (file) => {\n    const url = process.env.REACT_APP_API_BASE_URL + 'po'\n    const formData = new FormData()\n    formData.append('file', file)\n\n    const response = await ApiRequest({\n      url: url,\n      method: 'POST',\n      formData: formData,\n    })\n    const json = await response\n\n    set({\n      message: json.responseMessage,\n    })\n  },\n  updateOrder: async (soNumber, status) => {\n    const url = process.env.REACT_APP_API_BASE_URL + 'so'\n\n    const response = await ApiRequest({\n      url: url,\n      method: 'PUT',\n      soNumber: soNumber,\n      status: status,\n    })\n    const json = await response\n\n    set({\n      message: json.responseMessage,\n    })\n  },\n}))\n\nexport default useStore\n"],"names":["SalesOrderPages","marketplace","useParams","fetchOrder","orderList","sumPrice","sumTotalPrice","sumHpp","sumMargin","sumAdmin","sumOngkir","sumCleanMargin","useStore","state","formatter","Intl","NumberFormat","currentDate","Date","firstDay","getFullYear","getMonth","formattedDate","toLocaleDateString","year","month","day","replace","firstDate","setValueFirstDate","useState","dayjs","endDate","setValueEndDate","useEffect","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","CCardBody","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DatePicker","label","value","onChange","newValue","scope","format","map","items","i","invoice_no","product_name","qty","sales_price","total_price","hpp","gross_margin","power_merchant_fee","ongkir_fee","Math","round","clean_margin","_ref","url","method","marketplace_id","start_date","end_date","formData","soNumber","status","fetch","headers","body","then","res","result","json","error","console","log","create","set","sisaPersediaan","productList","startDate","message","setStartDate","async","setEndDate","fetchProduct","response","ApiRequest","process","data","sisa_persediaan","SbsProductList","start_date_object","$d","start_date_parsed","end_date_object","end_date_parsed","sum_price","sum_total_price","sum_hpp","sum_margin","sum_admin","sum_ongkir","sum_clean_margin","SbsOrderList","uploadSalesOrder","FormData","append","file","responseMessage","uploadPurchaseOrder","updateOrder"],"sourceRoot":""}